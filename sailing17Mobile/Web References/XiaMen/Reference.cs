//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.269
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.269 版自动生成。
// 
#pragma warning disable 1591

namespace sailing17Mobile.XiaMen {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PublicQueryServiceSoap", Namespace="http://tempuri.org/")]
    public partial class PublicQueryService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ImportArrivalQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportActivityQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback FeeReduceQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SailingScheduleQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportActivityQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExpcontainerReleaseQueryOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PublicQueryService() {
            this.Url = global::sailing17Mobile.Properties.Settings.Default.sailing17Mobile_XiaMen_PublicQueryService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ImportArrivalQueryCompletedEventHandler ImportArrivalQueryCompleted;
        
        /// <remarks/>
        public event ImportActivityQueryCompletedEventHandler ImportActivityQueryCompleted;
        
        /// <remarks/>
        public event FeeReduceQueryCompletedEventHandler FeeReduceQueryCompleted;
        
        /// <remarks/>
        public event SailingScheduleQueryCompletedEventHandler SailingScheduleQueryCompleted;
        
        /// <remarks/>
        public event ExportActivityQueryCompletedEventHandler ExportActivityQueryCompleted;
        
        /// <remarks/>
        public event ExpcontainerReleaseQueryCompletedEventHandler ExpcontainerReleaseQueryCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportArrivalQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ImportArrivalQuery(string ctnNo, string blNo, string startdate, string enddate, out string errorMessage) {
            object[] results = this.Invoke("ImportArrivalQuery", new object[] {
                        ctnNo,
                        blNo,
                        startdate,
                        enddate});
            errorMessage = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ImportArrivalQueryAsync(string ctnNo, string blNo, string startdate, string enddate) {
            this.ImportArrivalQueryAsync(ctnNo, blNo, startdate, enddate, null);
        }
        
        /// <remarks/>
        public void ImportArrivalQueryAsync(string ctnNo, string blNo, string startdate, string enddate, object userState) {
            if ((this.ImportArrivalQueryOperationCompleted == null)) {
                this.ImportArrivalQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportArrivalQueryOperationCompleted);
            }
            this.InvokeAsync("ImportArrivalQuery", new object[] {
                        ctnNo,
                        blNo,
                        startdate,
                        enddate}, this.ImportArrivalQueryOperationCompleted, userState);
        }
        
        private void OnImportArrivalQueryOperationCompleted(object arg) {
            if ((this.ImportArrivalQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportArrivalQueryCompleted(this, new ImportArrivalQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportActivityQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ImportActivityQuery(string blNo, string startdate, out string errorMessage) {
            object[] results = this.Invoke("ImportActivityQuery", new object[] {
                        blNo,
                        startdate});
            errorMessage = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ImportActivityQueryAsync(string blNo, string startdate) {
            this.ImportActivityQueryAsync(blNo, startdate, null);
        }
        
        /// <remarks/>
        public void ImportActivityQueryAsync(string blNo, string startdate, object userState) {
            if ((this.ImportActivityQueryOperationCompleted == null)) {
                this.ImportActivityQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportActivityQueryOperationCompleted);
            }
            this.InvokeAsync("ImportActivityQuery", new object[] {
                        blNo,
                        startdate}, this.ImportActivityQueryOperationCompleted, userState);
        }
        
        private void OnImportActivityQueryOperationCompleted(object arg) {
            if ((this.ImportActivityQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportActivityQueryCompleted(this, new ImportActivityQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FeeReduceQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable FeeReduceQuery(string blNo, string ctnNo, string jachGc, string jaRef, string startdate, string enddate, out string errorMessage) {
            object[] results = this.Invoke("FeeReduceQuery", new object[] {
                        blNo,
                        ctnNo,
                        jachGc,
                        jaRef,
                        startdate,
                        enddate});
            errorMessage = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FeeReduceQueryAsync(string blNo, string ctnNo, string jachGc, string jaRef, string startdate, string enddate) {
            this.FeeReduceQueryAsync(blNo, ctnNo, jachGc, jaRef, startdate, enddate, null);
        }
        
        /// <remarks/>
        public void FeeReduceQueryAsync(string blNo, string ctnNo, string jachGc, string jaRef, string startdate, string enddate, object userState) {
            if ((this.FeeReduceQueryOperationCompleted == null)) {
                this.FeeReduceQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFeeReduceQueryOperationCompleted);
            }
            this.InvokeAsync("FeeReduceQuery", new object[] {
                        blNo,
                        ctnNo,
                        jachGc,
                        jaRef,
                        startdate,
                        enddate}, this.FeeReduceQueryOperationCompleted, userState);
        }
        
        private void OnFeeReduceQueryOperationCompleted(object arg) {
            if ((this.FeeReduceQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FeeReduceQueryCompleted(this, new FeeReduceQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SailingScheduleQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SailingScheduleQuery(string sald, string sald2, string vevsNm, string vaflag, out string errorMessage) {
            object[] results = this.Invoke("SailingScheduleQuery", new object[] {
                        sald,
                        sald2,
                        vevsNm,
                        vaflag});
            errorMessage = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SailingScheduleQueryAsync(string sald, string sald2, string vevsNm, string vaflag) {
            this.SailingScheduleQueryAsync(sald, sald2, vevsNm, vaflag, null);
        }
        
        /// <remarks/>
        public void SailingScheduleQueryAsync(string sald, string sald2, string vevsNm, string vaflag, object userState) {
            if ((this.SailingScheduleQueryOperationCompleted == null)) {
                this.SailingScheduleQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSailingScheduleQueryOperationCompleted);
            }
            this.InvokeAsync("SailingScheduleQuery", new object[] {
                        sald,
                        sald2,
                        vevsNm,
                        vaflag}, this.SailingScheduleQueryOperationCompleted, userState);
        }
        
        private void OnSailingScheduleQueryOperationCompleted(object arg) {
            if ((this.SailingScheduleQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SailingScheduleQueryCompleted(this, new SailingScheduleQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExportActivityQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ExportActivityQuery(string blNo, string startdate, string jobNo, string wjobNo, out string errorMessage) {
            object[] results = this.Invoke("ExportActivityQuery", new object[] {
                        blNo,
                        startdate,
                        jobNo,
                        wjobNo});
            errorMessage = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ExportActivityQueryAsync(string blNo, string startdate, string jobNo, string wjobNo) {
            this.ExportActivityQueryAsync(blNo, startdate, jobNo, wjobNo, null);
        }
        
        /// <remarks/>
        public void ExportActivityQueryAsync(string blNo, string startdate, string jobNo, string wjobNo, object userState) {
            if ((this.ExportActivityQueryOperationCompleted == null)) {
                this.ExportActivityQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportActivityQueryOperationCompleted);
            }
            this.InvokeAsync("ExportActivityQuery", new object[] {
                        blNo,
                        startdate,
                        jobNo,
                        wjobNo}, this.ExportActivityQueryOperationCompleted, userState);
        }
        
        private void OnExportActivityQueryOperationCompleted(object arg) {
            if ((this.ExportActivityQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportActivityQueryCompleted(this, new ExportActivityQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExpcontainerReleaseQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ExpcontainerReleaseQuery(string blNo, string startdate, string enddate, out string errorMessage) {
            object[] results = this.Invoke("ExpcontainerReleaseQuery", new object[] {
                        blNo,
                        startdate,
                        enddate});
            errorMessage = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ExpcontainerReleaseQueryAsync(string blNo, string startdate, string enddate) {
            this.ExpcontainerReleaseQueryAsync(blNo, startdate, enddate, null);
        }
        
        /// <remarks/>
        public void ExpcontainerReleaseQueryAsync(string blNo, string startdate, string enddate, object userState) {
            if ((this.ExpcontainerReleaseQueryOperationCompleted == null)) {
                this.ExpcontainerReleaseQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExpcontainerReleaseQueryOperationCompleted);
            }
            this.InvokeAsync("ExpcontainerReleaseQuery", new object[] {
                        blNo,
                        startdate,
                        enddate}, this.ExpcontainerReleaseQueryOperationCompleted, userState);
        }
        
        private void OnExpcontainerReleaseQueryOperationCompleted(object arg) {
            if ((this.ExpcontainerReleaseQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExpcontainerReleaseQueryCompleted(this, new ExpcontainerReleaseQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ImportArrivalQueryCompletedEventHandler(object sender, ImportArrivalQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportArrivalQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportArrivalQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ImportActivityQueryCompletedEventHandler(object sender, ImportActivityQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportActivityQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportActivityQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FeeReduceQueryCompletedEventHandler(object sender, FeeReduceQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FeeReduceQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FeeReduceQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SailingScheduleQueryCompletedEventHandler(object sender, SailingScheduleQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SailingScheduleQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SailingScheduleQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExportActivityQueryCompletedEventHandler(object sender, ExportActivityQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportActivityQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportActivityQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExpcontainerReleaseQueryCompletedEventHandler(object sender, ExpcontainerReleaseQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExpcontainerReleaseQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExpcontainerReleaseQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591